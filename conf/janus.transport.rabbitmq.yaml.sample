# Configuration of the RabbitMQ additional transport for the Janus API.
# This is only useful when you're wrapping Janus requests in your server
# application, and handling the communication with clients your own way.
# At the moment, only a single "application" can be handled at the same
# time, meaning that Janus won't implement multiple queues to handle
# multiple concurrent "application servers" taking advantage of its
# features. Support for this is planned, though (e.g., through some kind
# of negotiation to create queues on the fly). Right now, you can only
# configure the address of the RabbitMQ server to use, and the queues to
# make use of to receive (to-janus) and send (from-janus) messages
# from/to an external application. If you're using the same RabbitMQ
# server instance for multiple Janus instances, make sure you configure
# different queues for each of them (e.g., from-janus-1/to-janus-1 and
# from-janus-2/to-janus-2), or otherwise both the instances will make
# use of the same queues and messages will get lost. The integration
# is disabled by default, so set enable=yes if you want to use it.

general:
# Whether the support must be enabled
    enable: no
# Whether the JSON messages should be indented (default),
# plain (no indentation) or compact (no indentation and no spaces)
    json: indented
# The address of the RabbitMQ server
    host: localhost
# The port of the RabbitMQ server (5672 by default)
    #port: 5672
# Username to use to authenticate, if needed
    #username: guest
# Password to use to authenticate, if needed
    #password: guest
# Virtual host to specify when logging in, if needed
    #vhost: /
# Name of the queue for incoming messages
    to_janus: to-janus
# Name of the queue for outgoing messages
    from_janus: from-janus
# Exchange for outgoing messages, using default if not provided
    #janus_exchange: janus-exchange
# Whether ssl support must be enabled
    #ssl_enable: no
# Whether peer verification must be enabled
    #ssl_verify_peer: yes
# Whether hostname verification must be enabled
    #ssl_verify_hostname: yes
# Certificates to use when SSL support is enabled, if needed
    #ssl_cacert: /path/to/cacert.pem
    #ssl_cert: /path/to/cert.pem
    #ssl_key: /path/to/key.pem

# If you want to expose the Admin API via RabbitMQ as well, you need to
# specify a different set of queues, as you cannot mix Janus API and
# Admin API messaging. The same RabbitMQ server is supposed to be used.
# Notice that by default the Admin API support via RabbitMQ is disabled.
admin:
# Whether the support must be enabled
    #admin_enable: no
# Name of the queue for incoming messages
    #to_janus_admin: to-janus-admin
# Name of the queue for outgoing messages
    #from_janus_admin: from-janus-admin
