# You can also control a Janus instance using Nanomsg sockets. The only
# aspect you need to configure here is the address to use for the
# communication, and whether the address should be used to bind locally
# or to connect to a remote endpoint. Notice that the only supported
# pattern is NN_PAIR, so you'll only be able to have a single client
# controlling the API with this plugin. As usual, both Janus API and Admin
# API endpoints can be configured.
general: {
	enabled = true						# Whether to enable the Nanomsg interface
										# for Janus API clients
	json = "indented"					# Whether the JSON messages should be indented (default),
										# plain (no indentation) or compact (no indentation and no spaces)
	#mode = "bind"						# Whether we should 'bind' to the specified
										# address (default), or connect to it if remote
	address = "ipc:///tmp/janus.ipc"	# Address to use (Janus API), refer
										# to the Nanomsg documentation for more info
										# on different transports you can use here
}

# As with other transport plugins, you can use Nanomsg to interact with
# the Admin API as well: in case you're interested in it, a different
# address needs to be provided.
admin: {
	admin_enabled = false				# Whether to enable the Nanomsg interface
										# for Admin API clients
	#admin_mode = "bind"
	#admin_address = "ipc:///tmp/janus-admin.ipc"
}
